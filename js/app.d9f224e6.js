(function(e){function t(t){for(var o,a,s=t[0],c=t[1],l=t[2],d=0,E=[];d<s.length;d++)a=s[d],Object.prototype.hasOwnProperty.call(i,a)&&i[a]&&E.push(i[a][0]),i[a]=0;for(o in c)Object.prototype.hasOwnProperty.call(c,o)&&(e[o]=c[o]);u&&u(t);while(E.length)E.shift()();return r.push.apply(r,l||[]),n()}function n(){for(var e,t=0;t<r.length;t++){for(var n=r[t],o=!0,a=1;a<n.length;a++){var s=n[a];0!==i[s]&&(o=!1)}o&&(r.splice(t--,1),e=c(c.s=n[0]))}return e}var o={},a={3:0},i={3:0},r=[];function s(e){return c.p+"js/"+({}[e]||e)+"."+{1:"b4ec3755",2:"49b0f256",4:"d6fe5fd8",5:"cd92ecc1",6:"732409ab",7:"c4f2eefd",8:"0727c1e5",9:"46f6e3a7"}[e]+".js"}function c(t){if(o[t])return o[t].exports;var n=o[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,c),n.l=!0,n.exports}c.e=function(e){var t=[],n={1:1,4:1,5:1,6:1};a[e]?t.push(a[e]):0!==a[e]&&n[e]&&t.push(a[e]=new Promise((function(t,n){for(var o="css/"+({}[e]||e)+"."+{1:"197e499a",2:"31d6cfe0",4:"7ef83de8",5:"1b8f3d79",6:"047a4da0",7:"31d6cfe0",8:"31d6cfe0",9:"31d6cfe0"}[e]+".css",i=c.p+o,r=document.getElementsByTagName("link"),s=0;s<r.length;s++){var l=r[s],d=l.getAttribute("data-href")||l.getAttribute("href");if("stylesheet"===l.rel&&(d===o||d===i))return t()}var E=document.getElementsByTagName("style");for(s=0;s<E.length;s++){l=E[s],d=l.getAttribute("data-href");if(d===o||d===i)return t()}var u=document.createElement("link");u.rel="stylesheet",u.type="text/css",u.onload=t,u.onerror=function(t){var o=t&&t.target&&t.target.src||i,r=new Error("Loading CSS chunk "+e+" failed.\n("+o+")");r.code="CSS_CHUNK_LOAD_FAILED",r.request=o,delete a[e],u.parentNode.removeChild(u),n(r)},u.href=i;var S=document.getElementsByTagName("head")[0];S.appendChild(u)})).then((function(){a[e]=0})));var o=i[e];if(0!==o)if(o)t.push(o[2]);else{var r=new Promise((function(t,n){o=i[e]=[t,n]}));t.push(o[2]=r);var l,d=document.createElement("script");d.charset="utf-8",d.timeout=120,c.nc&&d.setAttribute("nonce",c.nc),d.src=s(e);var E=new Error;l=function(t){d.onerror=d.onload=null,clearTimeout(u);var n=i[e];if(0!==n){if(n){var o=t&&("load"===t.type?"missing":t.type),a=t&&t.target&&t.target.src;E.message="Loading chunk "+e+" failed.\n("+o+": "+a+")",E.name="ChunkLoadError",E.type=o,E.request=a,n[1](E)}i[e]=void 0}};var u=setTimeout((function(){l({type:"timeout",target:d})}),12e4);d.onerror=d.onload=l,document.head.appendChild(d)}return Promise.all(t)},c.m=e,c.c=o,c.d=function(e,t,n){c.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},c.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},c.t=function(e,t){if(1&t&&(e=c(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(c.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)c.d(n,o,function(t){return e[t]}.bind(null,o));return n},c.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return c.d(t,"a",t),t},c.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},c.p="/",c.oe=function(e){throw console.error(e),e};var l=window["webpackJsonp"]=window["webpackJsonp"]||[],d=l.push.bind(l);l.push=t,l=l.slice();for(var E=0;E<l.length;E++)t(l[E]);var u=d;r.push([0,0]),n()})({0:function(e,t,n){e.exports=n("2f39")},"2f39":function(e,t,n){"use strict";n.r(t);n("ddb0"),n("ac1f"),n("5319"),n("81a9"),n("7d6e"),n("e54f"),n("985d"),n("31cd");var o=n("2b0e"),a=n("1f91"),i=n("42d2"),r=n("b05d"),s=n("436b");o["default"].use(r["a"],{config:{capacitor:{iosStatusBarPadding:null}},lang:a["a"],iconSet:i["a"],plugins:{Dialog:s["a"]}});var c=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{attrs:{id:"q-app"}},[n("router-view")],1)},l=[],d={name:"App",created(){}},E=d,u=n("2877"),S=Object(u["a"])(E,c,l,!1,null,null,null),m=S.exports,I=n("ded3"),h=n.n(I),T=n("2f62"),g={state:()=>({}),mutations:{},actions:{},getters:{}},f=(n("ace4"),n("5cc6"),n("219c"),n("26e9"),n("c19f"),n("0967"));function M(e){console.log(`BLE UTILS => ${e}`)}var D={async IsEnabled(){return M("IsEnabled"),new Promise(((e,t)=>{try{ble.isEnabled((()=>{e(!0)}),(()=>{e(!1)}))}catch(n){t(n)}}))},async IsLocationEnabled(){return M("IsLocationEnabled"),new Promise(((e,t)=>{try{ble.isLocationEnabled((()=>{e(!0)}),(()=>{e(!1)}))}catch(n){t(n)}}))}};function A(e){console.log(`BLE => ${e}`)}const p={NAME:"SmartLi BLE",SERVICE_ID:"cfe42bb2-7b4c-11ea-bc55-0242ac130003",WRITE_ID:"cfe430d0-7b4c-11ea-bc55-0242ac130003",READ_ID:"cfe43210-7b4c-11ea-bc55-0242ac130003",SCAN_TIME:5e3};var O={state:()=>({isEnable:!1,isInit:!1,isConnected:!1,isSearching:!1,selectedAddress:"",writer:{},devicesList:[],protocol:{MESSAGE_TYPE:{GESTURE_CHANGE:16,GESTURE_OPTIONS:17,WORK_MODE:18,SENSORS_OPTIONS:19,SPEEDS_OPTIONS:20,ACCELERATION_OPTIONS:21,GESTURES_CONFIG:22,GET_GESTURES_CONFIG:23,REHABILITATION_OPTIONS:24,GESTURES_STATE:32,GESTURES_OPTIONS:33,SMARTLI_STATE:34,SENSORS_OPTIONS_STATE:35,SPEEDS_OPTIONS_STATE:36,ACCELERATION_OPTIONS_STATE:37,SENSORS_STATE:38,FIRMWARE_VERSION:144,GET_SMARTLI_TOTAL_STATES:128,TOTAL_RESET:136},WORK_MODE_TYPE:{HAND_CONTROL:0,EMG1_CONTROL:1,EMG1nEMG2_CONTROLL:2},GESTURE_MODE:{NORMAL:0,LEARNING:1},GESTURE_TYPE:{TWEEZER_OPEN:111,TWEEZER_CLOSE:113,POWER:112,BIG_FINGER:114,USER:200,ALL:300},GESTURE_STATE:{OPENING:0,CLOSING:1,OPENED:2,CLOSED:3},RESET_CODE:{SEND_CODE:[44,66,77]}}}),mutations:{mutationWriter(e,t){A(`mutationDevice -> ${JSON.stringify(t)}`),e.writer=t},mutationSelectedAddress(e,t){A(`mutationSelectedAddress -> ${t}`),e.selectedAddress=t},mutationIsConnected(e,t){A(`mutationIsConnected -> ${t}`),e.isConnected=t},mutationIsSearching(e,t){A(`mutationIsSearching -> ${t}`),e.isSearching=t},mutationErrorMessage(e,t){A(`mutationErrorMessage -> ${t}`),e.errorMessage=t},mutationIsEnable(e,t){A(`mutationIsEnable -> ${t}`),e.isEnable=t},mutationIsInit(e,t){A(`mutationIsInit -> ${t}`),e.isInit=t},mutationAddDeviceInList(e,t){A(`mutationAddDeviceInList -> ${JSON.stringify(t)}`),e.devicesList.push(t)},mutationClearDeviceList(e){e.devicesList=[]}},actions:{async ChangeGesture({dispatch:e,getters:t},n){await e("DataSend",[t.Protocol.MESSAGE_TYPE.GESTURE_CHANGE,t.Protocol.GESTURE_MODE.NORMAL,n,0])},async ChangeSpeedOption({commit:e,dispatch:t,getters:n},o){await t("DataSend",[n.Protocol.MESSAGE_TYPE.GESTURE_OPTIONS,n.Protocol.GESTURE_TYPE.ALL,100,o]),e("mutateSpeedMode",o)},clearErrors({commit:e}){e("mutationErrorMessage","")},async WorkWithBLE({dispatch:e,getters:t}){return A(`WorkWithBLE => Enabled: ${t.isBleEnabled} | Init: ${t.isBleInit}`),!(!t.isBleEnabled||!t.isBleInit)||(e("ShowAlert",{title:"ВНИМАНИЕ",message:"Модуль Bluetooth выключен или инициализация завершилась с ошибкой. Попробуйте повторить операцию."}),!1)},async InitializeBluetooth({commit:e,dispatch:t}){try{if(e("mutationIsEnable",!1),e("mutationIsInit",!1),e("mutationIsSearching",!1),e("mutationIsConnected",!1),e("mutationSelectedAddress",""),e("mutationClearDeviceList"),f["b"].is.mobile){A("ConnectToSmartli -> Mobile Platform");const n=await D.IsEnabled();if(n){e("mutationIsEnable",!0);const n=!f["b"].is.android||await D.IsLocationEnabled();A(`IsLocationEnabled: ${n}`),n?e("mutationIsInit",!0):(e("mutationIsInit",!1),t("ShowAlert",{title:"ВНИМАНИЕ!",message:"Служба глобального позиционирования не доступна. Её работа необходима для использования модуля Bluetooth вашего устройства."}))}else e("mutationIsEnable",!1),t("ShowAlert",{title:"ВНИМАНИЕ!",message:"Для работы приложения необходимо включить модуль Bluetooth вашего устройства"})}else e("mutationIsEnable",navigator.bluetooth)}catch(n){t("ShowAlert",{title:"ОШИБКА В РАБОТЕ ПРИЛОЖЕНИЯ!",error:!0,message:n})}},async FindBleDevices({commit:e,dispatch:t,getters:n},o){try{if(f["b"].is.mobile){const a=await t("WorkWithBLE");a&&(e("mutationClearDeviceList"),e("mutationIsSearching",!0),setTimeout((()=>{e("mutationIsSearching",!1)}),1e3*o),ble.scan([p.SERVICE_ID],o,(t=>{const o=n.DevicesList.findIndex((e=>e.id===t.id));o<0&&t.id&&e("mutationAddDeviceInList",t)}),(e=>{t("ShowAlert",{title:"ВНИМАНИЕ",error:!0,message:e})})))}else{A("PC mode"),e("mutationIsSearching",!0);try{const t=await navigator.bluetooth.requestDevice({filters:[{services:[p.SERVICE_ID]}]});A("PC mode end serch"),t&&e("mutationAddDeviceInList",t)}catch(a){"User cancelled the requestDevice() chooser."!==a.message&&(console.log(`FIND Searching ERROR: ${a.message}`),t("ShowAlert",{title:"ОШИБКА Bluetooth",error:!0,message:a}))}e("mutationIsSearching",!1)}}catch(i){t("ShowAlert",{title:"ОШИБКА В РАБОТЕ ПРИЛОЖЕНИЯ!",error:!0,message:i})}},async ConnectToSmartli({commit:e,dispatch:t},n){A(`ConnectToSmartli -> device: ${JSON.stringify(n)}`);try{if(f["b"].is.mobile){A("ConnectToSmartli -> Mobile Platform");const o=await t("WorkWithBLE");o&&ble.connect(n.id,(o=>{console.log(`Connection good => ${JSON.stringify(o)}`),e("mutationIsConnected",!0),e("mutationSelectedAddress",n.id),ble.startNotification(n.id,p.SERVICE_ID,p.READ_ID,(e=>{console.log("BLE RECIVED DATA"),console.log(JSON.stringify(e));const n=new Uint8Array(e);console.log(JSON.stringify(n)),t("RecivedDataWorker",n)}),(e=>{t("ShowAlert",{title:"ОШИБКА ПОЛУЧЕНИЯ ДАННЫХ ОТ SMARTLI!",error:!0,message:e})}))}),(t=>{console.log(`Disonnection good => ${JSON.stringify(t)}`),e("mutationIsConnected",!1),e("mutationSelectedAddress","")}))}else{const o=await n.gatt.connect();console.log(o);const a=await o.getPrimaryService(p.SERVICE_ID);console.log("Service was Connected");const i=await a.getCharacteristic(p.READ_ID);console.log("Characteristic was Connected"),await i.startNotifications(),i.addEventListener("characteristicvaluechanged",(e=>{const{value:n}=e.target,o=[],a=[];console.log("BLE RECIVED DATA");for(let t=0;t<n.byteLength;t+=1)a.push(`0x${`00${n.getUint8(t).toString(16)}`.slice(-2)}`),o.push(n.getUint8(t));console.log(JSON.stringify(o)),console.log(`> ${a.join(" ")}`),t("RecivedDataWorker",o)}));const r=await a.getCharacteristic(p.WRITE_ID);e("mutationWriter",r),console.log("Server was connected"),e("mutationIsConnected",!0),e("mutationSelectedAddress",n.id)}}catch(o){t("ShowAlert",{title:"ОШИБКА В РАБОТЕ ПРИЛОЖЕНИЯ!",error:!0,message:o})}},RecivedDataWorker({commit:e,dispatch:t,getters:n},o){console.log(`RECIVED DATA: ${JSON.stringify(o)}`);const a=n.Protocol.MESSAGE_TYPE;switch(o.reverse(),o["0"]){case a.GESTURES_STATE:console.log("gestures data recived"),e("mutationSelectGesture",o[1]);break;case a.GESTURES_OPTIONS:console.log("gestures options recived"),e("mutateSpeedMode",o[3]);break;case a.SENSORS_STATE:console.log("sensors data recived"),e("mutateSensorDataAll",o);break;case a.SMARTLI_STATE:e("mutateWorkModeFromID",o[2]),e("mutateBattery",o[3]);break;case a.SENSORS_OPTIONS_STATE:{console.log("sensors STATE recived");const t=o[1],a=o[2],i=o[3];e("mutationSensor",h()(h()({},n.Sensors.Tenzo),{},{isEnabled:t>0})),t&&e("mutationSensor",h()(h()({},n.Sensors.Tenzo),{},{value:t})),e("mutationSensor",h()(h()({},n.Sensors.EMG1),{},{isEnabled:a>0})),e("mutationSensor",h()(h()({},n.Sensors.EMG1),{},{value:a})),e("mutationSensor",h()(h()({},n.Sensors.EMG2),{},{isEnabled:i>0})),e("mutationSensor",h()(h()({},n.Sensors.EMG2),{},{value:i}));break}case a.SPEEDS_OPTIONS_STATE:e("mutateGestureSpeeds",{id:"hight",value:o[1]}),e("mutateGestureSpeeds",{id:"normal",value:o[2]}),e("mutateGestureSpeeds",{id:"low",value:o[3]});break;case a.ACCELERATION_OPTIONS_STATE:t("SetAccelerationStartSpeed",o[1]),t("SetAccelerationTime",o[2]);break;case a.FIRMWARE_VERSION:break;default:t("ShowAlert",{title:"ОШИБКА ПОЛУЧЕНИЯ ДАННЫХ ОТ SMARTLI!",error:!0,message:`Неизвестный код команды: ${o["0"]}`})}},async DataSend({dispatch:e,getters:t},n){try{if(f["b"].is.mobile){const o=await e("WorkWithBLE");if(o){const o=new ArrayBuffer(4),a=new Uint8Array(o);for(let e=0;e<a.length;e+=1)a[e]=n[e];ble.write(t.SelectedAddress,p.SERVICE_ID,p.WRITE_ID,a.buffer,(e=>{console.log(`Send Data good => ${JSON.stringify(e)}`)}),(t=>{console.log(`Send Data failure => ${JSON.stringify(t)}`),e("ShowAlert",{title:"ОШИБКА ОТПРАВКИ ДАННЫХ!",message:t})}))}}else if(console.log(`PC Send data => ${JSON.stringify(n)}`),(t.Writer||{}).writeValue){const e=new ArrayBuffer(4),o=new Uint8Array(e);[o[0],o[1],o[2],o[3]]=n.map((e=>parseInt(e,10))),await t.Writer.writeValue(o)}}catch(o){e("ShowAlert",{title:"ОШИБКА В РАБОТЕ ПРИЛОЖЕНИЯ!",error:!0,message:o})}},async Disconnect({commit:e,dispatch:t,getters:n}){const o=n.SelectedAddress;console.log(`Start Desconnect Process for ${o}`);try{f["b"].is.mobile?o&&await ble.stopNotification(o,p.SERVICE_ID,p.READ_ID,(n=>{console.log(`BLE STOP RECIVE ${n}`),ble.disconnect(o,(t=>{console.log(`Device disconnect was good => ${JSON.stringify(t)}`),e("mutationIsEnable",!1),e("mutationIsInit",!1),e("mutationIsSearching",!1),e("mutationIsConnected",!1),e("mutationSelectedAddress",""),e("mutationClearDeviceList")}),(e=>{console.log(`Send Data failure => ${JSON.stringify(e)}`),t("ShowAlert",{title:"ОШИБКА ОТКЛЮЧЕНИЯ УСТРОЙСТВА!",message:e})}))}),(e=>{t("ShowAlert",{title:"ОШИБКА ПОЛУЧЕНИЯ ДАННЫХ ОТ SMARTLI!",error:!0,message:e})})):(console.log("PC Mode not cofigurate yet"),n.DevicesList.forEach((async e=>{await e.gatt.disconnect(),e.representedDevice=null})),e("mutationIsEnable",!1),e("mutationIsInit",!1),e("mutationIsSearching",!1),e("mutationIsConnected",!1),e("mutationSelectedAddress",""),e("mutationClearDeviceList")),console.log("Desconnect Process Was Ended")}catch(a){t("ShowAlert",{title:"ОШИБКА В РАБОТЕ ПРИЛОЖЕНИЯ!",error:!0,message:a})}}},getters:{isBleEnabled:e=>e.isEnable,isBleInit:e=>e.isInit,isConnected:e=>e.isConnected,isSearching:e=>e.isSearching,SelectedAddress:e=>e.selectedAddress,DevicesList:e=>e.devicesList,Writer:e=>e.writer,Protocol:e=>e.protocol}};function b(e){console.log(`SMARTLI => ${e}`)}const w={MODULES:{MI:{INDEX:0,NAME:"MI"},MII:{INDEX:1,NAME:"MII"},MIII:{INDEX:2,NAME:"MIII"},MIV:{INDEX:3,NAME:"MIV"},MV:{INDEX:4,NAME:"MV"}},STATE:{OPEN:10,CLOSE:20,DRIVE:90},GESTURES_ID:{OPEN_TWEEZ:"111",POWER:"112",CLOSED_TWEEZ:"113",BIG_FINGER:"114",USER1:"200"},GRAFICS_LIMIT:40};function N(e,t,n){this.id=e,this.name=t,this.value=n,this.isEnabled=!0,this.data=[]}function R(e,t,n){if(this.id=e,n)this.name=n;else{const t=Object.entries(w.MODULES),n=t.find((([t,n])=>(t||!t)&&n.INDEX===e));[this.name]=n}this.state=t}function v(e,t,n,o){this.id=e,this.isSelected=!1,this.name=t,this.modules=o,this.motion=n}var L={state:()=>({gestures:[new v(w.GESTURES_ID.OPEN_TWEEZ,"Открытый пинцетный",!1,[new R(w.MODULES.MI.INDEX,w.STATE.DRIVE),new R(w.MODULES.MII.INDEX,w.STATE.DRIVE),new R(w.MODULES.MIII.INDEX,w.STATE.DRIVE),new R(w.MODULES.MIV.INDEX,w.STATE.OPEN),new R(w.MODULES.MV.INDEX,w.STATE.OPEN)]),new v(w.GESTURES_ID.POWER,"Силовой",!0,[new R(w.MODULES.MI.INDEX,w.STATE.DRIVE),new R(w.MODULES.MII.INDEX,w.STATE.DRIVE),new R(w.MODULES.MIII.INDEX,w.STATE.DRIVE),new R(w.MODULES.MIV.INDEX,w.STATE.DRIVE),new R(w.MODULES.MV.INDEX,w.STATE.DRIVE)]),new v(w.GESTURES_ID.CLOSED_TWEEZ,"Закрытый пинцетный",!1,[new R(w.MODULES.MI.INDEX,w.STATE.DRIVE),new R(w.MODULES.MII.INDEX,w.STATE.DRIVE),new R(w.MODULES.MIII.INDEX,w.STATE.DRIVE),new R(w.MODULES.MIV.INDEX,w.STATE.CLOSE),new R(w.MODULES.MV.INDEX,w.STATE.CLOSE)]),new v(w.GESTURES_ID.BIG_FINGER,"Отведённый большой палец",!1,[new R(w.MODULES.MI.INDEX,w.STATE.OPEN),new R(w.MODULES.MII.INDEX,w.STATE.DRIVE),new R(w.MODULES.MIII.INDEX,w.STATE.DRIVE),new R(w.MODULES.MIV.INDEX,w.STATE.DRIVE),new R(w.MODULES.MV.INDEX,w.STATE.DRIVE)]),new v(w.GESTURES_ID.USER1,"Пользовательский",!1,[new R(w.MODULES.MI.INDEX,w.STATE.DRIVE),new R(w.MODULES.MII.INDEX,w.STATE.OPEN),new R(w.MODULES.MIII.INDEX,w.STATE.DRIVE),new R(w.MODULES.MIV.INDEX,w.STATE.DRIVE),new R(w.MODULES.MV.INDEX,w.STATE.OPEN)])],EMG1:new N("emg1","МИО1",10),EMG2:new N("emg2","МИО2",10),Tenzo:new N("tenzo","Тензо",10),speedMode:2,gestureSpeeds:[{id:"hight",name:"Высокая скорость",value:100},{id:"normal",name:"Средняя скорость",value:65},{id:"low",name:"Низкая скорость",value:30}],workModes:[{id:0,name:"Ручное управление",isSelected:!0},{id:1,name:"МИО1 сенсор",isSelected:!1},{id:2,name:"МИО1 + МИО2 сенсор",isSelected:!1},{id:99,name:"Реабилитация",isSelected:!1}],acceleration:{startSpeed:60,time:10},rehabilitation:{speed:100,pause:50},battery:0}),mutations:{mutateSensorDataAll(e,t){b(`mutateSensorDataAll => sensor: ${JSON.stringify(t)} }`);const n=Math.round(t[1]*(100/254));e.EMG1.data.length>=w.GRAFICS_LIMIT?e.EMG1.data=[...e.EMG1.data.slice(1),n]:e.EMG1.data.push(n);const o=Math.round(t[2]*(100/254));e.EMG2.data.length>=w.GRAFICS_LIMIT?e.EMG2.data=[...e.EMG2.data.slice(1),o]:e.EMG2.data.push(o);const a=Math.round(t[3]*(100/254));e.Tenzo.data.length>=w.GRAFICS_LIMIT&&e.Tenzo.data.shift(),e.Tenzo.data.push(a)},mutateSensorData(e,{sensor:t,value:n}){b(`mutateSensorData => sensor: ${JSON.stringify(t)} }`),e.EMG1.id===t.id?(e.EMG1.data.length>=w.GRAFICS_LIMIT&&e.EMG1.data.shift(),e.EMG1.data.push(n)):e.EMG2.id===t.id?(e.EMG2.data.length>=w.GRAFICS_LIMIT&&e.EMG2.data.shift(),e.EMG2.data.push(n)):(e.Tenzo.data.length>=w.GRAFICS_LIMIT&&e.Tenzo.data.shift(),e.Tenzo.data.push(n))},mutationSensor(e,t){switch(b(`mutationEMG => value: ${JSON.stringify(t)} }`),t.id){case"emg1":e.EMG1=t;break;case"emg2":e.EMG2=t;break;case"tenzo":e.Tenzo=t;break;default:b(`mutationEMG => value: ${JSON.stringify(t)} }НЕ ожиданные данные`)}},mutationSelectGesture(e,t){b(`mutationSelectGesture => ${t}`),e.gestures=e.gestures.map((e=>(e.id===t.toString()?(b("finded gesture and set Selected => true"),e.isSelected=!0):e.isSelected=!1,e)))},mutateSpeedMode(e,t){b(`mutateSpeedMode => ${t}`),e.speedMode=t},mutateModuleState(e,{gesture:t,module:n,moduleState:o}){b(`mutateModuleState => ${t} | ${n} | ${o} `);const a=e.gestures.find((e=>e.id===t)),i=a.modules.find((e=>e.name===n));i&&(i.state=o)},mutateWorkMode(e,t){b(`mutateWorkMode => ${t}`),e.workModes=e.workModes.map((e=>(e.name===t?e.isSelected=!0:e.isSelected=!1,e)))},mutateWorkModeFromID(e,t){b(`mutateWorkMode => ${t}`),e.workModes=e.workModes.map((e=>(e.id===t?e.isSelected=!0:e.isSelected=!1,e)))},mutateGestureSpeeds(e,t){b(`mutateGestureSpeeds => ${JSON.stringify(t)}`);const n=e.gestureSpeeds.find((e=>e.id===t.id));n.value=t.value},mutateAcceleration(e,t){b(`mutateAcceleration => ${JSON.stringify(t)}`),e.acceleration=h()(h()({},e.acceleration),t)},mutateRehabilitation(e,t){b(`mutateRehabilitation => ${JSON.stringify(t)}`),e.rehabilitation=h()(h()({},e.rehabilitation),t)},mutateBattery(e,t){b(`mutateBattery => ${t}`),e.battery=t}},actions:{ResetStore({commit:e}){e("mutateBattery",0)},SetRehabilitationSpeed({commit:e},t){e("mutateRehabilitation",{speed:t})},SetRehabilitationPause({commit:e},t){e("mutateRehabilitation",{pause:t})},SetAccelerationStartSpeed({commit:e},t){e("mutateAcceleration",{startSpeed:t})},SetAccelerationTime({commit:e},t){e("mutateAcceleration",{time:t})},SetGestureSpeed({commit:e},t){e("mutateGestureSpeeds",t)},WorkModeSelect({commit:e},t){e("mutateWorkMode",t)},AddSensorValue({commit:e},{sensor:t,value:n}){e("mutateSensorData",{sensor:t,value:n})},SetSensorData({commit:e},t){e("mutationSensor",t)},SetSelectedGesture({commit:e},t){e("mutationSelectGesture",t)},SetSpeedMode({commit:e},t){e("mutateSpeedMode",t)},SetModuleState({commit:e},{gesture:t,module:n,moduleState:o}){e("mutateModuleState",{gesture:t,module:n,moduleState:o})}},getters:{Modules:()=>[" ","-","MI","MII","MIII","MIV","MV"],Gestures:e=>e.gestures,Module:e=>({gesture:t,module:n})=>e.gestures.find((e=>e.id===t)).modules.find((e=>e.id===n)),CONSTANTS:()=>w,Sensors:e=>({EMG1:e.EMG1,EMG2:e.EMG2,Tenzo:e.Tenzo}),SpeedMode:e=>e.speedMode,TensoGraphics:e=>[{name:e.Tenzo.name,data:e.Tenzo.data}],EMGGraphics:e=>[{name:e.EMG1.name,data:e.EMG1.data},{name:e.EMG2.name,data:e.EMG2.data}],WorkModes:e=>e.workModes.map((e=>e.name)),SelectedWorkMode:e=>e.workModes.find((e=>e.isSelected))||{},GestureSpeeds:e=>e.gestureSpeeds,Acceleration:e=>e.acceleration,Rehabilitation:e=>e.rehabilitation,Battery:e=>e.battery}};function G(e){console.log(`ROOT STORE => ${e}`)}o["default"].use(T["a"]);var _=function(){const e=new T["a"].Store({state:()=>({alert:{error:!1,title:"",message:"",show:!1,position:"bottom"}}),mutations:{mutationAlert(e,t){G(`mutationAlert => ${JSON.stringify(t)}`),e.alert=h()(h()({},e.alert),t)},mutationAlertClose(e,t){G(`mutationAlert => ${JSON.stringify(t)}`),e.alert=h()(h()({},e.alert),t)}},actions:{ShowAlert({commit:e},t){e("mutationAlert",h()({show:!0},t))},CloseAlert({commit:e}){e("mutationAlert",{show:!1})}},getters:{alert:e=>e.alert},modules:{navigation:g,ble:O,smartliState:L},strict:!1});return e},y=n("8c4f");const C=[{path:"/",component:()=>Promise.all([n.e(0),n.e(1)]).then(n.bind(null,"a4dc")),children:[{path:"",component:()=>Promise.all([n.e(0),n.e(2)]).then(n.bind(null,"10cd"))},{path:"ble",component:()=>Promise.all([n.e(0),n.e(2)]).then(n.bind(null,"10cd"))}]},{path:"/main",component:()=>Promise.all([n.e(0),n.e(1)]).then(n.bind(null,"a4dc")),children:[{path:"gestures",component:()=>Promise.all([n.e(0),n.e(4)]).then(n.bind(null,"2823"))},{path:"grafics",component:()=>Promise.all([n.e(0),n.e(5)]).then(n.bind(null,"d3e4"))},{path:"options",component:()=>Promise.all([n.e(0),n.e(7)]).then(n.bind(null,"7552"))},{path:"traning",component:()=>Promise.all([n.e(0),n.e(6)]).then(n.bind(null,"c52e"))},{path:"rehabilitation",component:()=>Promise.all([n.e(0),n.e(8)]).then(n.bind(null,"3367"))}]},{path:"*",component:()=>Promise.all([n.e(0),n.e(9)]).then(n.bind(null,"e51e"))}];var P=C;o["default"].use(y["a"]);var U=function(){const e=new y["a"]({scrollBehavior:()=>({x:0,y:0}),routes:P,mode:"history",base:"/"});return e},V=async function(){const e="function"===typeof _?await _({Vue:o["default"]}):_,t="function"===typeof U?await U({Vue:o["default"],store:e}):U;e.$router=t;const n={router:t,store:e,render:e=>e(m),el:"#q-app"};return{app:n,store:e,router:t}},$=n("9483");Object($["a"])("/service-worker.js",{ready(){},registered(){},cached(){},updatefound(){},updated(){},offline(){},error(){}});var W=n("a6f4"),k=async({Vue:e})=>{e.use(W["b"])};/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream&&window.navigator.standalone&&n.e(0).then(n.t.bind(null,"a0db",7));const B="/";async function X(){const{app:e,store:t,router:n}=await V();let a=!1;const i=e=>{a=!0;const t=Object(e)===e?n.resolve(e).route.fullPath:e;window.location.href=t},r=window.location.href.replace(window.location.origin,""),s=[k];for(let l=0;!1===a&&l<s.length;l++)if("function"===typeof s[l])try{await s[l]({app:e,router:n,store:t,Vue:o["default"],ssrContext:null,redirect:i,urlPath:r,publicPath:B})}catch(c){return c&&c.url?void(window.location.href=c.url):void console.error("[Quasar] boot error:",c)}!0!==a&&new o["default"](e)}X()},"31cd":function(e,t,n){}});